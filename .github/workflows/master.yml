name: CodeGear CI
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
permissions:
  contents: write
jobs:
  linting:
    name: Linting project
    runs-on: ubuntu-latest
    steps:
      # Node.js and pnpm setup
      - uses: actions/checkout@v3
      - name: Installing Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: pnpm/action-setup@v2
        name: Installing pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Getting pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      # Installing deps
      - name: Installing dependencies
        run: pnpm install
      # Main rules
      - name: Linting project
        run: npm run lint
  building:
    name: Creating a Production Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # Node.js and pnpm setup
      - name: Installing Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: pnpm/action-setup@v2
        name: Installing pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Getting pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        # Installing deps
      - name: Installing dependencies
        run: pnpm install
        # Main rules
      - name: Creating a Production Build
        run: npm run build
      - name: Pushing to build branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "Build: ({sha}) {msg}"
