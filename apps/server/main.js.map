{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/config/cors.ts","webpack:///../../libs/config/src/index.ts","webpack:///external commonjs \"tslib\"","webpack:///../../libs/config/src/env/client.ts","webpack:///../../libs/config/src/env/server.ts","webpack:///./src/exception-filters/index.ts","webpack:///./src/exception-filters/http-exception.filter.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///./src/pipes/validation.pipe.ts","webpack:///external commonjs \"class-transformer\"","webpack:///external commonjs \"class-validator\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/modules/code-executor-api/index.ts","webpack:///./src/modules/code-executor-api/code-executor.module.ts","webpack:///./src/modules/code-executor-api/code-executor.controller.ts","webpack:///../../libs/services/src/index.ts","webpack:///../../libs/services/src/executor-api/index.ts","webpack:///../../libs/services/src/executor-api/dto/execute-code-api.dto.ts","webpack:///../../libs/services/src/executor-api/lib/types.ts","webpack:///../../libs/services/src/executor-api/executor-api.module.ts","webpack:///external commonjs \"@nestjs/axios\"","webpack:///../../libs/services/src/executor-api/executor-api.service.ts","webpack:///external commonjs \"axios\"","webpack:///external commonjs \"qs-stringify\"","webpack:///../../libs/services/src/executor-api/lib/errors.ts","webpack:///../../libs/services/src/executor-api/lib/helpers/transformLanguage.ts","webpack:///../../libs/services/src/executor-api/lib/typeGuards.ts","webpack:///../../libs/services/src/services.module.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import { CorsOptions } from '@nestjs/common/interfaces/external/cors-options.interface'\n\nimport { clientUrl } from '$/config'\n\nexport const corsConfig: CorsOptions = {\n  origin: clientUrl,\n  methods: ['POST', 'PUT', 'DELETE', 'GET'],\n  credentials: true\n}\n","export * from './env/client'\nexport * from './env/server'\n","module.exports = require(\"tslib\");","export const clientUrl = process.env['CLIENT_URL'] ?? 'http://localhost:3000'\n","export const serverPrefix = process.env['SERVER_PREFIX'] ?? ''\n\nexport const serverPort = process.env['SERVER_PORT'] ?? 6868\n\nexport const compilerApiUrl = process.env['CODE_COMPILER_API_URL'] ?? 'https://api.codex.jaagrav.in'\n\nexport const serverUrl = process.env['SERVER_URL'] ?? 'http://localhost:6868'\n\n\nexport const EndPoints = {\n  CODE_EXECUTOR_API: 'execute'\n} as const\n","export { HttpExceptionFilter } from './http-exception.filter'\n","import { Request, Response } from 'express'\n\nimport { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common'\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse<Response>()\n    const request = ctx.getRequest<Request>()\n    const status = exception.getStatus()\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n        message: exception.message\n      })\n  }\n}\n","module.exports = require(\"@nestjs/common\");","import { plainToClass } from 'class-transformer'\nimport { validate } from 'class-validator'\n\nimport { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common'\n\n\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: unknown, metadata: ArgumentMetadata) {\n    const validationErrors = await validate(plainToClass(metadata.metatype, value))\n\n    if (validationErrors.length) {\n      const messages = validationErrors.map(err => {\n        return `${err.property} - ${Object.values(err.constraints).join(', ')}`\n      })\n      throw new BadRequestException(messages.join('. '))\n    }\n\n    return value\n  }\n\n}\n","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\n\nimport { CodeExecutorModule } from './modules/code-executor-api'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    CodeExecutorModule\n  ],\n  controllers: [],\n  providers: []\n})\nexport class AppModule {}\n","module.exports = require(\"@nestjs/config\");","export { CodeExecutorModule } from './code-executor.module'\n","import { Module } from '@nestjs/common'\n\nimport { CodeExecutorController } from './code-executor.controller'\n\nimport { ExecutorApiModule } from '$/services'\n\n@Module({\n  imports: [ExecutorApiModule],\n  controllers: [CodeExecutorController],\n  providers: []\n})\nexport class CodeExecutorModule {}\n","import { BadRequestException, Body, Controller, Post } from '@nestjs/common'\n\nimport { EndPoints } from '$/config'\nimport {\n  ExecuteCodeApiDTO,\n  ExecutorApiResponse,\n  ExecutorApiService,\n  FailedToFetchError,\n  isExecutorApiResponse\n} from '$/services'\n\n@Controller(EndPoints.CODE_EXECUTOR_API)\nexport class CodeExecutorController {\n  constructor(private executorService: ExecutorApiService) {\n  }\n  @Post()\n  async executeCode(@Body() args: ExecuteCodeApiDTO): Promise<ExecutorApiResponse> {\n    const response = await this.executorService.fetchCodeToExecute(args)\n\n    if (!isExecutorApiResponse(response)) {\n      throw new BadRequestException(FailedToFetchError())\n    }\n\n    return response\n  }\n}\n","export * from './executor-api'\nexport { ServicesModule } from './services.module'\n","export { ExecuteCodeApiDTO } from './dto/execute-code-api.dto'\nexport { ExecutorApiModule } from './executor-api.module'\nexport { ExecutorApiService } from './executor-api.service'\nexport { FailedToFetchError } from './lib/errors'\nexport { isExecutorApiResponse } from './lib/typeGuards'\nexport { ExecutorApiResponse,ExecutorLanguages } from './lib/types'\n","import { IsIn, IsOptional, IsString } from 'class-validator'\n\nimport { ExecutorLanguages, ExecutorLanguagesKeys } from '../lib/types'\n\nexport class ExecuteCodeApiDTO {\n  @IsString()\n  readonly code: string\n  @IsIn(Object.keys(ExecutorLanguages))\n  readonly language: ExecutorLanguagesKeys\n  @IsString()\n  @IsOptional()\n  readonly input?: string\n}\n\n","import { HttpStatus } from '@nestjs/common'\n\nexport const ExecutorLanguages =  {\n  java : 'java',\n  python : 'py',\n  cpp : 'cpp',\n  c : 'c',\n  go : 'go',\n  cs : 'cs',\n  javascript : 'js'\n} as const\n\nexport type ExecutorLanguagesKeys = keyof typeof ExecutorLanguages\nexport type ExecutorLanguagesValues = typeof ExecutorLanguages[ExecutorLanguagesKeys]\n\nexport interface ExecutorApiResponse {\n  timeStamp: number\n  status: HttpStatus\n  output: string\n  error: string\n  language: ExecutorLanguagesValues\n  info: string\n}\n","import { HttpModule } from '@nestjs/axios'\nimport { Module } from '@nestjs/common'\n\nimport { ExecutorApiService } from './executor-api.service'\n\n@Module({\n  imports: [HttpModule],\n  providers: [ExecutorApiService],\n  exports: [ExecutorApiService]\n})\nexport class ExecutorApiModule {}\n","module.exports = require(\"@nestjs/axios\");","import axios from 'axios'\nimport stringify from 'qs-stringify'\n\nimport { HttpService } from '@nestjs/axios'\nimport { Injectable, Logger } from '@nestjs/common'\n\nimport { ExecuteCodeApiDTO } from './dto/execute-code-api.dto'\nimport { FailedToFetchError } from './lib/errors'\nimport { transformLanguage } from './lib/helpers/transformLanguage'\nimport { ExecutorApiResponse } from './lib/types'\n\nimport { compilerApiUrl } from '$/config'\n\n@Injectable()\nexport class ExecutorApiService {\n  constructor(private readonly httpService: HttpService) {}\n  async fetchCodeToExecute(args: ExecuteCodeApiDTO) {\n    Logger.log('Request to execute custom code...')\n\n    try {\n      const response = await this.httpService.post<ExecutorApiResponse>(compilerApiUrl,\n        stringify(transformLanguage(args)),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        }\n      ).toPromise()\n\n      return response?.data\n    }\n    catch (e: unknown) {\n      if (axios.isAxiosError(e)){\n        Logger.warn(FailedToFetchError(e.status))\n      }\n    }\n    return null\n  }\n}\n","module.exports = require(\"axios\");","module.exports = require(\"qs-stringify\");","export const FailedToFetchError = (status = 400) => {\n  return `Failed to get response from api.codex.jaagrav.in (${status}).`\n}\n","import { ExecuteCodeApiDTO } from '../../dto/execute-code-api.dto'\nimport { ExecutorLanguages, ExecutorLanguagesValues } from '../types'\n\ntype TransformLanguage = Omit<ExecuteCodeApiDTO, 'language'> & {\n  language: ExecutorLanguagesValues\n}\n\nexport const transformLanguage = (args: ExecuteCodeApiDTO): TransformLanguage => {\n  return {\n    ...args,\n    language: ExecutorLanguages[args.language]\n  }\n}\n\n","import { ExecutorApiResponse } from './types'\n\n\nexport const isExecutorApiResponse = (res: unknown): res is ExecutorApiResponse => {\n  if (typeof res !== 'object' || res === null) {\n    return false\n  }\n\n  if ('timeStamp' in res && typeof res.timeStamp === 'number' &&\n    'output' in res && typeof res.output === 'string' &&\n    'language' in res && typeof res.language === 'string') {\n    return true\n  }\n\n  return false\n}\n","import { Module } from '@nestjs/common'\n\nimport { ExecutorApiModule } from './executor-api'\n\n@Module({\n  controllers: [],\n  providers: [],\n  imports: [ExecutorApiModule]\n})\nexport class ServicesModule {}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { corsConfig } from '@/config/cors'\nimport { HttpExceptionFilter } from '@/exception-filters'\nimport { ValidationPipe } from '@/pipes/validation.pipe'\nimport { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app.module'\n\nimport { serverPort, serverPrefix } from '$/config'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n\n  app.setGlobalPrefix(serverPrefix)\n  app.useGlobalFilters(new HttpExceptionFilter())\n  app.useGlobalPipes(new ValidationPipe())\n  app.enableCors(corsConfig)\n\n  Logger.log(`🚀 Server is running on port ${serverPort}`)\n  await app.listen(serverPort)\n}\n\nbootstrap()\n"],"names":[],"sourceRoot":""}