import{_ as e,o as a,c as s,Q as o}from"./chunks/framework.0c952bb0.js";const g=JSON.parse('{"title":"Code Generation","description":"","frontmatter":{},"headers":[],"relativePath":"other-concepts/code-generation.md","filePath":"other-concepts/code-generation.md","lastUpdated":1697535758000}'),n={name:"other-concepts/code-generation.md"},t=o('<h1 id="code-generation" tabindex="-1">Code Generation <a class="header-anchor" href="#code-generation" aria-label="Permalink to &quot;Code Generation&quot;">​</a></h1><p>The project uses two types of generators.</p><ul><li><a href="https://www.hygen.io/docs/quick-start" target="_blank" rel="noreferrer">Hygen</a> - To create small components in libraries</li><li><a href="https://nx.dev/extending-nx/recipes/local-generators" target="_blank" rel="noreferrer">Nx Generators</a> - To create individual libraries or microservices</li></ul><h2 id="hygen" tabindex="-1">Hygen <a class="header-anchor" href="#hygen" aria-label="Permalink to &quot;Hygen&quot;">​</a></h2><p>You can create small modules in the system, for example <a href="https://feature-sliced.design/" target="_blank" rel="noreferrer">fsd</a> module or ui component. To do this, use the <code>packages/generator</code> library. It uses .esm syntax, and provides more flexible customization with templates.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XcJ3t" id="tab-ruVoPyM" checked="checked"><label for="tab-ruVoPyM">sh</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">generator:new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--name=fsd-module</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">generator:new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--name=fsd-module</span></span></code></pre></div></div></div><h2 id="nx-generators" tabindex="-1">Nx Generators <a class="header-anchor" href="#nx-generators" aria-label="Permalink to &quot;Nx Generators&quot;">​</a></h2><p>If you want to generate an application or microservice, use nx generators.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-1REjh" id="tab-aJ06-uO" checked="checked"><label for="tab-aJ06-uO">sh</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--type=microservice</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--name=my-microservice</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--type=microservice</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--name=my-microservice</span></span></code></pre></div></div></div><p>This will create a microservice in the <code>apps/server</code> folder with the necessary settings, Dockerfile, built-in Kafka module and more.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>I&#39;m using cg-global-generator under the hood, which is located in the <code>tools/generators</code> folder</p></div>',11),r=[t];function l(c,p,i,d,h,y){return a(),s("div",null,r)}const m=e(n,[["render",l]]);export{g as __pageData,m as default};
