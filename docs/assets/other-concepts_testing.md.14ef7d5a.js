import{_ as t,o as e,c as o,Q as n}from"./chunks/framework.0c952bb0.js";const f=JSON.parse('{"title":"Testing","description":"","frontmatter":{},"headers":[],"relativePath":"other-concepts/testing.md","filePath":"other-concepts/testing.md","lastUpdated":1697535758000}'),s={name:"other-concepts/testing.md"},r=n('<h1 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h1><p>Unfortunately, at the moment the project is not covered by testing (only <code>storybook</code> test-runner). If I continue to develop it, then it will be covered with testing.</p><p>In general, I planned to do 5 types of tests:</p><ul><li>Unit testing with <a href="https://vitest.dev/" target="_blank" rel="noreferrer">Vitest</a> ❌</li><li>RTL tests (Integration and Unit testing) ❌</li><li>e2e tests with <a href="https://www.cypress.io/" target="_blank" rel="noreferrer">Cypress</a> or <a href="https://playwright.dev/" target="_blank" rel="noreferrer">Playwright</a> [frontend] ❌</li><li>e2e tests with supertest [backend] ❌</li><li>storybook tests (storybook-test-runner) ✅</li></ul><hr><p>I wanted to try these technologies and test some components at the end of the project. But somehow it didn’t work out. ( ͡° ͜ʖ ͡°)</p>',6),i=[r];function a(l,c,d,h,p,_){return e(),o("div",null,i)}const u=t(s,[["render",a]]);export{f as __pageData,u as default};
