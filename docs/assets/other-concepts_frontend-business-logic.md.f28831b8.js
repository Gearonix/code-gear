import{_ as e,o as t,c as o,Q as s}from"./chunks/framework.0c952bb0.js";const b=JSON.parse('{"title":"Frontend Business Logic","description":"","frontmatter":{},"headers":[],"relativePath":"other-concepts/frontend-business-logic.md","filePath":"other-concepts/frontend-business-logic.md","lastUpdated":1697535758000}'),i={name:"other-concepts/frontend-business-logic.md"},a=s('<h1 id="frontend-business-logic" tabindex="-1">Frontend Business Logic <a class="header-anchor" href="#frontend-business-logic" aria-label="Permalink to &quot;Frontend Business Logic&quot;">​</a></h1><p>In the project I use <a href="https://mobx.js.org/installation.html" target="_blank" rel="noreferrer">MobX</a> for the state manager.</p><h2 id="division-into-services" tabindex="-1">Division into services <a class="header-anchor" href="#division-into-services" aria-label="Permalink to &quot;Division into services&quot;">​</a></h2><p>I divide mobx stores into 4 categories.</p><ul><li>cats.<code>actions</code>.ts - state mutations</li><li>cats.<code>getters</code>.ts - state getters</li><li>cats.<code>services</code>.ts - anchyronous state mutations</li><li>cats.<code>store</code>.ts - a module that combines everything and adds the state itself</li></ul><div class="tip custom-block"><p class="custom-block-title">Examples</p><p>Examples of usage can be found in the <code>web/editor</code> library</p></div><h2 id="root-store" tabindex="-1">Root Store <a class="header-anchor" href="#root-store" aria-label="Permalink to &quot;Root Store&quot;">​</a></h2><p>Even though Mobx provides options for separating stores (and which I use), I still use one root store.</p><div class="tip custom-block"><p class="custom-block-title">Global Store</p><p>The global store can be found in the <code>client</code> application</p></div>',9),n=[a];function r(c,l,d,h,p,u){return t(),o("div",null,n)}const m=e(i,[["render",r]]);export{b as __pageData,m as default};
