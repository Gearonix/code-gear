import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.0c952bb0.js";const u=JSON.parse('{"title":"Automation (CI/CD)","description":"","frontmatter":{},"headers":[],"relativePath":"features/automation.md","filePath":"features/automation.md","lastUpdated":1697144842000}'),l={name:"features/automation.md"},o=e(`<h1 id="automation-ci-cd" tabindex="-1">Automation (CI/CD) <a class="header-anchor" href="#automation-ci-cd" aria-label="Permalink to &quot;Automation (CI/CD)&quot;">​</a></h1><p>The project implements automation, automatic running of linting, unit tests and build of a monorepository when a pull request is sent to the <code>master</code> branch.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.github</span></span>
<span class="line"><span style="color:#e1e4e8;">├─ workflows</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ build.yml - project build + push to build bransh</span></span>
<span class="line"><span style="color:#e1e4e8;">│  ├─ lint.yml - linting </span></span>
<span class="line"><span style="color:#e1e4e8;">   └─ storybook.yml - deploying and testing storybook remotely</span></span>
<span class="line"><span style="color:#e1e4e8;">└─ dependabot.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.github</span></span>
<span class="line"><span style="color:#24292e;">├─ workflows</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ build.yml - project build + push to build bransh</span></span>
<span class="line"><span style="color:#24292e;">│  ├─ lint.yml - linting </span></span>
<span class="line"><span style="color:#24292e;">   └─ storybook.yml - deploying and testing storybook remotely</span></span>
<span class="line"><span style="color:#24292e;">└─ dependabot.yml</span></span></code></pre></div><h2 id="problems-with-single-version-policy" tabindex="-1">Problems with <a href="https://nx.dev/concepts/more-concepts/dependency-management#single-version-policy" target="_blank" rel="noreferrer">Single Version Policy</a> <a class="header-anchor" href="#problems-with-single-version-policy" aria-label="Permalink to &quot;Problems with [Single Version Policy](https://nx.dev/concepts/more-concepts/dependency-management#single-version-policy)&quot;">​</a></h2><p>Nx popularizes the idea of storing all dependencies in one big <code>package.json</code> file. This approach has a number of pros and cons:</p><h3 id="pros" tabindex="-1">Pros: <a class="header-anchor" href="#pros" aria-label="Permalink to &quot;Pros:&quot;">​</a></h3><ul><li>You don&#39;t have to worry about different versions of your packages in different applications</li><li>You get access to all the packages in the monorepository, without having to add them to your app <code>package.json</code></li></ul><h3 id="cons" tabindex="-1">Cons: <a class="header-anchor" href="#cons" aria-label="Permalink to &quot;Cons:&quot;">​</a></h3><ul><li>You have to install ALL the packages every time in your CI (or docker containers), and that takes a long time.</li><li><code>package.json</code> loses readability.</li></ul><h2 id="how-i-accelerated-the-ci-pipeline" tabindex="-1">How I accelerated the CI pipeline <a class="header-anchor" href="#how-i-accelerated-the-ci-pipeline" aria-label="Permalink to &quot;How I accelerated the CI pipeline&quot;">​</a></h2><p>However, I was able to find some ways to speed up CI.</p><h3 id="_1-nx-distributed-caching" tabindex="-1">1. Nx Distributed Caching <a class="header-anchor" href="#_1-nx-distributed-caching" aria-label="Permalink to &quot;1. Nx Distributed Caching&quot;">​</a></h3><p>Using <a href="https://github.com/nrwl/nx-set-shas" target="_blank" rel="noreferrer">nx-set-shas</a> + <a href="https://nx.dev/concepts/affected" target="_blank" rel="noreferrer">nx-affected</a> gave its advantages in conjunction with <a href="https://nx.dev/nx-cloud/intro/what-is-nx-cloud" target="_blank" rel="noreferrer">Nx Cloud</a>.</p><p>This uses the ntwl/nx-set-shas@v3 module in Github Actions.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">fetch-depth</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Derive appropriate SHAs for base and head for \`nx affected\` commands</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nrwl/nx-set-shas@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">main-branch-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;master&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">run</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">    echo &quot;BASE: \${{ env.NX_BASE }}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    echo &quot;HEAD: \${{ env.NX_HEAD }}&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">actions/checkout@v3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">fetch-depth</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Derive appropriate SHAs for base and head for \`nx affected\` commands</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nrwl/nx-set-shas@v3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">main-branch-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;master&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">run</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">    echo &quot;BASE: \${{ env.NX_BASE }}&quot;</span></span>
<span class="line"><span style="color:#032F62;">    echo &quot;HEAD: \${{ env.NX_HEAD }}&quot;</span></span></code></pre></div><p>When the build starts, nx affected starts.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;executor&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;nx:run-commands&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;options&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;command&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;nx affected --base=origin/master -t build --parallel=3 --exclude=&#39;*,!tag:runtime:*&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;build&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;executor&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;nx:run-commands&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;options&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;command&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;nx affected --base=origin/master -t build --parallel=3 --exclude=&#39;*,!tag:runtime:*&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-storing-yarn-cache-in-the-repository" tabindex="-1">2. Storing yarn cache in the repository <a class="header-anchor" href="#_2-storing-yarn-cache-in-the-repository" aria-label="Permalink to &quot;2. Storing yarn cache in the repository&quot;">​</a></h3><p>Yarn Berry <a href="https://github.com/yarnpkg/berry" target="_blank" rel="noreferrer">(Yarn 2/3)</a> stores your node_module&#39;s zip files in its cache. The Cache can be global in your system, and therefore - shared between multiple projects, or local. So you can use it wherever you want.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-rkWWK" id="tab-nlhXUbr" checked="checked"><label for="tab-nlhXUbr">.gitignore</label></div><div class="blocks"><div class="language-.gitignore vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">.gitignore</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.yarn/*</span></span>
<span class="line"><span style="color:#e1e4e8;">!.yarn/cache</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.yarn/*</span></span>
<span class="line"><span style="color:#24292e;">!.yarn/cache</span></span></code></pre></div></div></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Cache Yarn dependencies</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">actions/cache@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">cache-yarn-cache</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      .yarn/cache</span></span>
<span class="line"><span style="color:#9ECBFF;">      node_modules</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">key</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">\${{ runner.os }}-yarn-\${{ hashFiles(&#39;**/*.yarn.lock&#39;) }}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">restore-keys</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      \${{ runner.os }}-yarn-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Installing dependencies</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">run</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">yarn install --immutable --check-cache</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Cache Yarn dependencies</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">actions/cache@v3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">id</span><span style="color:#24292E;">: </span><span style="color:#032F62;">cache-yarn-cache</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      .yarn/cache</span></span>
<span class="line"><span style="color:#032F62;">      node_modules</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">key</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\${{ runner.os }}-yarn-\${{ hashFiles(&#39;**/*.yarn.lock&#39;) }}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">restore-keys</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      \${{ runner.os }}-yarn-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Installing dependencies</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">run</span><span style="color:#24292E;">: </span><span style="color:#032F62;">yarn install --immutable --check-cache</span></span></code></pre></div><h2 id="why-not-yarn-pnp" tabindex="-1">Why not <a href="https://yarnpkg.com/features/pnp" target="_blank" rel="noreferrer">yarn PnP</a>? <a class="header-anchor" href="#why-not-yarn-pnp" aria-label="Permalink to &quot;Why not [yarn PnP](https://yarnpkg.com/features/pnp)?&quot;">​</a></h2><p>Despite the advantages of yarn PnP, I couldn&#39;t get it to work (there were problems with vite and preact), so I had to use node-modules <code>nodeLinker</code>.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># .yarnrc.yml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">nodeLinker</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">node-modules</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># .yarnrc.yml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">nodeLinker</span><span style="color:#24292E;">: </span><span style="color:#032F62;">node-modules</span></span></code></pre></div>`,24),p=[o];function t(c,r,i,y,d,E){return a(),n("div",null,p)}const m=s(l,[["render",t]]);export{u as __pageData,m as default};
