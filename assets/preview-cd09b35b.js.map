{"version":3,"file":"preview-cd09b35b.js","sources":["../../../../libs/config/src/storybook/plugins/create-viewports.ts","../../../../libs/config/src/storybook/create-preview-defaults.ts","../../../../libs/client-shared/src/storybook/decorators/theme.decorator.tsx","../../../../libs/client-shared/src/storybook/decorators/styles.decorator.tsx","../../../../libs/ui/.storybook/preview.ts"],"sourcesContent":["export const viewports = [600, 800, 1000, 1200, 1500]\n\nconst widthToStr = (w: number) => w.toString() + 'px'\n\nconst generateViewPort = (width: number) => {\n  return {\n    name: widthToStr(width),\n    styles: {\n      width: widthToStr(width),\n      height: '1080px'\n    }\n  }\n}\nexport const createViewPorts = () => {\n  return Object.fromEntries(\n    viewports.map((i) => [widthToStr(i), generateViewPort(i)])\n  )\n}\n","import { Decorator, Preview } from '@storybook/react'\nimport { createViewPorts } from './plugins/create-viewports'\n\ninterface PreviewDefaultsPayload {\n  decorators: Decorator[]\n}\n\ntype CreatePreviewDefaults = (args: PreviewDefaultsPayload) => Preview\n\nexport const createPreviewDefaults: CreatePreviewDefaults = ({\n  decorators\n}) => ({\n  parameters: {\n    viewport: {\n      viewports: createViewPorts()\n    },\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/\n      }\n    },\n    backgrounds: {\n      values: []\n    },\n    storySort: (a, b) =>\n      a.id === b.id ? 0 : a.id.localeCompare(b.id, undefined, { numeric: true })\n  },\n  decorators\n})\n","import { ThemeProvider } from '@/providers/theme'\nimport { Decorator } from '@storybook/react'\n\nexport const ThemeDecorator: Decorator = (story) => (\n  <ThemeProvider>{story()}</ThemeProvider>\n)\n","import { GlobalStyles } from '@/providers'\nimport { Decorator } from '@storybook/react'\n\nexport const StylesDecorator: Decorator = (story) => (\n  <>\n    {story()}\n    <GlobalStyles />\n  </>\n)\n","import { StylesDecorator, ThemeDecorator } from '$/client-shared'\nimport { Preview } from '@storybook/react'\nimport { createPreviewDefaults } from '$/config'\n\nconst preview: Preview = createPreviewDefaults({\n  decorators: [StylesDecorator, ThemeDecorator]\n})\n\nexport default preview\n"],"names":["viewports","widthToStr","w","generateViewPort","width","createViewPorts","i","createPreviewDefaults","decorators","a","b","ThemeDecorator","story","jsx","ThemeProvider","StylesDecorator","jsxs","Fragment","GlobalStyles","preview"],"mappings":"4NAAO,MAAMA,EAAY,CAAC,IAAK,IAAK,IAAM,KAAM,IAAI,EAE9CC,EAAcC,GAAcA,EAAE,WAAa,KAE3CC,EAAoBC,IACjB,CACL,KAAMH,EAAWG,CAAK,EACtB,OAAQ,CACN,MAAOH,EAAWG,CAAK,EACvB,OAAQ,QACV,CAAA,GAGSC,EAAkB,IACtB,OAAO,YACZL,EAAU,IAAKM,GAAM,CAACL,EAAWK,CAAC,EAAGH,EAAiBG,CAAC,CAAC,CAAC,CAAA,ECNhDC,EAA+C,CAAC,CAC3D,WAAAC,CACF,KAAO,CACL,WAAY,CACV,SAAU,CACR,UAAWH,EAAgB,CAC7B,EACA,QAAS,CAAE,cAAe,YAAa,EACvC,SAAU,CACR,SAAU,CACR,MAAO,uBACP,KAAM,OACR,CACF,EACA,YAAa,CACX,OAAQ,CAAC,CACX,EACA,UAAW,CAACI,EAAGC,IACbD,EAAE,KAAOC,EAAE,GAAK,EAAID,EAAE,GAAG,cAAcC,EAAE,GAAI,OAAW,CAAE,QAAS,GAAM,CAC7E,EACA,WAAAF,CACF,GC3BaG,EAA6BC,GACvCC,EAAA,IAAAC,EAAA,CAAe,aAAQ,ECDbC,EAA8BH,GAEtCI,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAML,EAAA,QACNM,EAAa,EAAA,CAAA,EAChB,ECHIC,EAAmBZ,EAAsB,CAC7C,WAAY,CAACQ,EAAiBJ,CAAc,CAC9C,CAAC"}