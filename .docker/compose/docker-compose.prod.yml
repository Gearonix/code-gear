version: '3.9'

services:
  mysql:
    image: mysql:latest
    restart: always
    container_name: db
    networks:
      - cgnet
    ports:
      - 3306:3306
    volumes:
      - ./data:/var/lib/mysql
      - ./tools/database:/docker-entrypoint-initdb.d
    env_file:
      - .build.env
      - .docker.env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - cgnet
    env_file:
      - .docker.env
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    networks:
      - cgnet
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    env_file:
      - .docker.env

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - cgnet
    depends_on:
      - kafka
    ports:
      - 8080:8080
    env_file:
      - .docker.env

  client:
    build:
      dockerfile: apps/client/Dockerfile
      context: .
    container_name: client
    restart: always
    env_file:
      - .build.env
      - .docker.env
    networks:
      - cgnet
    ports:
      - 3000:80

  gateway:
    build:
      dockerfile: apps/server/gateway/Dockerfile
      context: .
    container_name: gateway
    depends_on:
      - kafka
      - mysql
    networks:
      - cgnet
    ports:
      - 6868:6868
    restart: always
    env_file:
      - .build.env
      - .docker.env

  service-code-executor:
    build:
      dockerfile: apps/server/service-code-executor/Dockerfile
      context: .
    container_name: service-code-executor
    depends_on:
      - kafka
    networks:
      - cgnet
    restart: always
    env_file:
      - .build.env
      - .docker.env

networks:
  cgnet:
    driver: bridge
